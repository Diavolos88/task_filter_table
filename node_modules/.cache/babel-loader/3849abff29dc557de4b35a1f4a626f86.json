{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\salov\\\\Desktop\\\\project_for_work\\\\src\\\\components\\\\MainData\\\\MainData.jsx\",\n    _s = $RefreshSig$();\n\nimport Reacrt, { useState } from 'react';\nimport NewLineTable from \"../NewLineTable/NewLineTable\";\nimport s from './MainData.module.css';\nimport Filters from \"./Filters/Filters\";\nimport SearchData from \"../SearchData/SearchData\";\nimport React from \"react\";\nimport AddedUser from \"../AddedUser/AddedUser\";\n\nconst sortWithFilters = (arr, filters, search) => {\n  if (search) {\n    let searchKey;\n\n    for (const filtersKey in search) {\n      searchKey = filtersKey;\n    }\n\n    if (searchKey === \"streetAddress\" || searchKey === \"city\" || searchKey === \"state\" || searchKey === \"zip\") {\n      arr = arr.filter(e => {\n        if (e[\"address\"][searchKey].toString().toLowerCase().indexOf(search[searchKey].toLowerCase()) !== -1) {\n          return e;\n        }\n      });\n    } else {\n      arr = arr.filter(e => {\n        if (e[searchKey].toString().toLowerCase().indexOf(search[searchKey].toLowerCase()) !== -1) {\n          return e;\n        }\n      });\n    }\n  }\n\n  for (const mainDataKey in filters) {\n    if (filters[mainDataKey]) {\n      arr.sort(function (a, b) {\n        if (mainDataKey === 'id') {\n          let x = a[mainDataKey];\n          let y = b[mainDataKey];\n          return x < y ? -1 : x > y ? 1 : 0;\n        } else if (mainDataKey === 'address') {\n          let x = a[mainDataKey]['streetAddress'].toLowerCase();\n          let y = b[mainDataKey]['streetAddress'].toLowerCase();\n          return x < y ? -1 : x > y ? 1 : 0;\n        } else {\n          let x = a[mainDataKey].toLowerCase();\n          let y = b[mainDataKey].toLowerCase();\n          return x < y ? -1 : x > y ? 1 : 0;\n        }\n      });\n    } else {\n      arr.sort(function (a, b) {\n        if (mainDataKey === 'id') {\n          let x = a[mainDataKey];\n          let y = b[mainDataKey];\n          return x > y ? -1 : x < y ? 1 : 0;\n        } else if (mainDataKey === 'address') {\n          let x = a[mainDataKey]['streetAddress'].toLowerCase();\n          let y = b[mainDataKey]['streetAddress'].toLowerCase();\n          return x > y ? -1 : x < y ? 1 : 0;\n        } else {\n          let x = a[mainDataKey].toLowerCase();\n          let y = b[mainDataKey].toLowerCase();\n          return x > y ? -1 : x < y ? 1 : 0;\n        }\n      });\n    }\n  }\n\n  return arr;\n};\n\nconst MainData = props => {\n  _s();\n\n  let [num, setNum] = useState(0);\n  let [nowPage, setNowPage] = useState(1);\n  let [filters, setNowFilters] = useState({\n    id: true\n  });\n  let [search, setSearch] = useState(false);\n  let [addedUser, setAddedUser] = useState(false);\n  const firsLine = {\n    id: \"id\",\n    firstName: \"firstName\",\n    lastName: \"lastName\",\n    email: \"email\",\n    phone: \"phone\",\n    address: \"address\",\n    description: \"description\"\n  };\n\n  const changeState = e => () => {\n    setNowPage(e);\n    setNum(e - 1);\n  };\n\n  if (props.data) {\n    if (props.data.data.length <= 50) {\n      let arr = props.data.data;\n      arr = sortWithFilters(arr, filters, search);\n      arr = arr.map(tr => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(NewLineTable, {\n          setAddedUser: setAddedUser,\n          data: tr\n        }, new Date().now, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 34\n      }, this));\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(SearchData, {\n          selectData: firsLine,\n          setSearch: setSearch,\n          nowPage: nowPage,\n          setNowPage: setNowPage,\n          setNum: setNum\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(Filters, {\n              filter: filters,\n              setFilters: setNowFilters,\n              data: firsLine\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 25\n            }, this), arr]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddedUser, {\n          data: addedUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this);\n    } else {\n      let arr = props.data.data;\n      arr = sortWithFilters(arr, filters, search);\n      let len = arr.length;\n      arr = arr.slice(num * 50, (num + 1) * 50).map(tr => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(NewLineTable, {\n          setAddedUser: setAddedUser,\n          data: tr\n        }, new Date().now, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 69\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 65\n      }, this));\n      let nums = [];\n      let end = Math.ceil(len / 50);\n\n      for (let i = 1; i < end + 1; i++) {\n        nums.push( /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: changeState(i),\n          className: i === nowPage ? s.pagenatorNow : s.pagenator,\n          children: i\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 27\n        }, this));\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(SearchData, {\n          selectData: firsLine,\n          setSearch: setSearch,\n          nowPage: nowPage,\n          setNowPage: setNowPage,\n          setNum: setNum\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: [/*#__PURE__*/_jsxDEV(Filters, {\n              filter: filters,\n              setFilters: setNowFilters,\n              data: firsLine\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 25\n            }, this), arr]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddedUser, {\n          data: addedUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: nums\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this);\n    }\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 16\n    }, this);\n  }\n};\n\n_s(MainData, \"QvJtvcE5mW+pZIG3hiEvw5ftCV4=\");\n\n_c = MainData;\nexport default MainData;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainData\");","map":{"version":3,"sources":["C:/Users/salov/Desktop/project_for_work/src/components/MainData/MainData.jsx"],"names":["Reacrt","useState","NewLineTable","s","Filters","SearchData","React","AddedUser","sortWithFilters","arr","filters","search","searchKey","filtersKey","filter","e","toString","toLowerCase","indexOf","mainDataKey","sort","a","b","x","y","MainData","props","num","setNum","nowPage","setNowPage","setNowFilters","id","setSearch","addedUser","setAddedUser","firsLine","firstName","lastName","email","phone","address","description","changeState","data","length","map","tr","Date","now","len","slice","nums","end","Math","ceil","i","push","pagenatorNow","pagenator"],"mappings":"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","sourcesContent":["import Reacrt, {useState} from 'react'\r\nimport NewLineTable from \"../NewLineTable/NewLineTable\";\r\nimport s from './MainData.module.css'\r\nimport Filters from \"./Filters/Filters\";\r\nimport SearchData from \"../SearchData/SearchData\";\r\nimport React from \"react\";\r\nimport AddedUser from \"../AddedUser/AddedUser\";\r\n\r\nconst sortWithFilters = (arr, filters, search) => {\r\n    if (search) {\r\n        let searchKey\r\n        for (const filtersKey in search) {\r\n            searchKey = filtersKey\r\n        }\r\n        if (searchKey === \"streetAddress\" || searchKey === \"city\" || searchKey === \"state\" || searchKey === \"zip\") {\r\n            arr = arr.filter(e => {\r\n                if (e[\"address\"][searchKey].toString().toLowerCase().indexOf(search[searchKey].toLowerCase()) !== -1) {\r\n                    return e\r\n                }\r\n            })\r\n        } else {\r\n            arr = arr.filter(e => {\r\n                if (e[searchKey].toString().toLowerCase().indexOf(search[searchKey].toLowerCase()) !== -1) {\r\n                    return e\r\n                }\r\n            })\r\n        }\r\n    }\r\n    for (const mainDataKey in filters) {\r\n        if (filters[mainDataKey]) {\r\n            arr.sort(function (a, b) {\r\n                if (mainDataKey === 'id') {\r\n                    let x = a[mainDataKey];\r\n                    let y = b[mainDataKey];\r\n                    return x < y ? -1 : x > y ? 1 : 0\r\n                } else if (mainDataKey === 'address') {\r\n                    let x = a[mainDataKey]['streetAddress'].toLowerCase();\r\n                    let y = b[mainDataKey]['streetAddress'].toLowerCase();\r\n                    return x < y ? -1 : x > y ? 1 : 0;\r\n                } else {\r\n                    let x = a[mainDataKey].toLowerCase();\r\n                    let y = b[mainDataKey].toLowerCase();\r\n                    return x < y ? -1 : x > y ? 1 : 0;\r\n                }\r\n            });\r\n        } else {\r\n            arr.sort(function (a, b) {\r\n                if (mainDataKey === 'id') {\r\n                    let x = a[mainDataKey];\r\n                    let y = b[mainDataKey];\r\n                    return x > y ? -1 : x < y ? 1 : 0\r\n                } else if (mainDataKey === 'address') {\r\n                    let x = a[mainDataKey]['streetAddress'].toLowerCase();\r\n                    let y = b[mainDataKey]['streetAddress'].toLowerCase();\r\n                    return x > y ? -1 : x < y ? 1 : 0;\r\n                } else {\r\n                    let x = a[mainDataKey].toLowerCase();\r\n                    let y = b[mainDataKey].toLowerCase();\r\n                    return x > y ? -1 : x < y ? 1 : 0;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    return arr\r\n}\r\n\r\nconst MainData = (props) => {\r\n    let [num, setNum] = useState(0)\r\n    let [nowPage, setNowPage] = useState(1)\r\n    let [filters, setNowFilters] = useState({id: true})\r\n    let [search, setSearch] = useState(false)\r\n    let [addedUser, setAddedUser] = useState(false)\r\n    const firsLine = {\r\n        id: \"id\",\r\n        firstName: \"firstName\",\r\n        lastName: \"lastName\",\r\n        email: \"email\",\r\n        phone: \"phone\",\r\n        address: \"address\",\r\n        description: \"description\"\r\n    }\r\n\r\n    const changeState = (e) => () => {\r\n        setNowPage(e)\r\n        setNum(e - 1)\r\n    }\r\n\r\n    if (props.data) {\r\n        if (props.data.data.length <= 50) {\r\n            let arr = props.data.data\r\n            arr = sortWithFilters(arr, filters, search)\r\n            arr = arr.map(tr => (<tr ><NewLineTable setAddedUser={setAddedUser} data={tr} key={new Date().now}/></tr>))\r\n            return (\r\n                <div>\r\n                    <SearchData selectData={firsLine} setSearch={setSearch} nowPage={nowPage} setNowPage={setNowPage}\r\n                                setNum={setNum}/>\r\n                    <table>\r\n                        <tbody>\r\n                        <Filters filter={filters} setFilters={setNowFilters} data={firsLine}/>\r\n                        {arr}\r\n                        </tbody>\r\n                    </table>\r\n                    <AddedUser data={addedUser}/>\r\n                </div>\r\n            )\r\n        } else {\r\n            let arr = props.data.data\r\n            arr = sortWithFilters(arr, filters, search)\r\n            let len = arr.length\r\n            arr = arr.slice(num * 50, (num + 1) * 50).map(tr => <tr><NewLineTable setAddedUser={setAddedUser} data={tr}\r\n                                                                                  key={new Date().now}/></tr>)\r\n            let nums = []\r\n            let end = Math.ceil(len / 50)\r\n            for (let i = 1; i < end + 1; i++) {\r\n                nums.push(<span onClick={changeState(i)}\r\n                                className={i === nowPage ? s.pagenatorNow : s.pagenator}>{i}</span>)\r\n            }\r\n            return (\r\n                <div>\r\n                    <SearchData selectData={firsLine} setSearch={setSearch} nowPage={nowPage} setNowPage={setNowPage}\r\n                                setNum={setNum}/>\r\n                    <table>\r\n                        <tbody>\r\n                        <Filters filter={filters} setFilters={setNowFilters} data={firsLine}/>\r\n                        {arr}\r\n                        </tbody>\r\n                    </table>\r\n                    <AddedUser data={addedUser}/>\r\n                    <div>{nums}</div>\r\n                </div>\r\n            )\r\n        }\r\n    } else {\r\n        return <div></div>\r\n    }\r\n}\r\n\r\n\r\nexport default MainData"]},"metadata":{},"sourceType":"module"}