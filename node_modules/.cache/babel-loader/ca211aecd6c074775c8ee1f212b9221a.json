{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\salov\\\\Desktop\\\\project_for_work\\\\src\\\\components\\\\SearchData\\\\SearchData.jsx\";\nimport React from \"react\";\nimport s from './SearchData.module.css';\n\nconst SearchData = props => {\n  let selectRef = /*#__PURE__*/React.createRef();\n  let inputRef = /*#__PURE__*/React.createRef();\n  let select = [];\n\n  for (const selectKey in props.selectData) {\n    if (selectKey === 'address') {\n      let state = [\"streetAddress\", \"city\", \"state\", \"zip\"];\n      state = state.map(e => /*#__PURE__*/_jsxDEV(\"option\", {\n        children: e\n      }, `${Math.random() * 1243567}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 36\n      }, this));\n      select.push(state);\n    } else {\n      select.push( /*#__PURE__*/_jsxDEV(\"option\", {\n        children: [\" \", selectKey]\n      }, `${Math.random() * 1243567}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 25\n      }, this));\n    }\n  }\n\n  const withFilter = () => {\n    if (props.nowPage !== 1) {\n      props.setNum(0);\n      props.setNowPage(1);\n    }\n\n    switch (selectRef.current.options[selectRef.current.options.selectedIndex].value) {\n      case \"id\":\n        props.setSearch({\n          id: inputRef.current.value\n        });\n        break;\n\n      case \"firstName\":\n        props.setSearch({\n          firstName: inputRef.current.value\n        });\n        break;\n\n      case \"lastName\":\n        props.setSearch({\n          lastName: inputRef.current.value\n        });\n        break;\n\n      case \"email\":\n        props.setSearch({\n          email: inputRef.current.value\n        });\n        break;\n\n      case \"phone\":\n        props.setSearch({\n          phone: inputRef.current.value\n        });\n        break;\n\n      case \"address\":\n        props.setSearch({\n          address: inputRef.current.value\n        });\n        break;\n\n      case \"description\":\n        props.setSearch({\n          description: inputRef.current.value\n        });\n        break;\n\n      case \"streetAddress\":\n        props.setSearch({\n          streetAddress: inputRef.current.value\n        });\n        break;\n\n      case \"city\":\n        props.setSearch({\n          city: inputRef.current.value\n        });\n        break;\n\n      case \"state\":\n        props.setSearch({\n          state: inputRef.current.value\n        });\n        break;\n\n      case \"zip\":\n        props.setSearch({\n          zip: inputRef.current.value\n        });\n        break;\n\n      default:\n        props.setSearch({\n          zip: inputRef.current.value\n        });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      className: s.sel,\n      ref: selectRef,\n      children: select\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      className: s.searchInput,\n      type: \"text\",\n      placeholder: \"Pls write something...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: withFilter,\n      className: s.findButton,\n      children: \"Find\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n\n_c = SearchData;\nexport default SearchData;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchData\");","map":{"version":3,"sources":["C:/Users/salov/Desktop/project_for_work/src/components/SearchData/SearchData.jsx"],"names":["React","s","SearchData","props","selectRef","createRef","inputRef","select","selectKey","selectData","state","map","e","Math","random","push","withFilter","nowPage","setNum","setNowPage","current","options","selectedIndex","value","setSearch","id","firstName","lastName","email","phone","address","description","streetAddress","city","zip","sel","searchInput","findButton"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,yBAAd;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,MAAIC,SAAS,gBAAGJ,KAAK,CAACK,SAAN,EAAhB;AACA,MAAIC,QAAQ,gBAAGN,KAAK,CAACK,SAAN,EAAf;AACA,MAAIE,MAAM,GAAG,EAAb;;AACA,OAAK,MAAMC,SAAX,IAAwBL,KAAK,CAACM,UAA9B,EAA0C;AACtC,QAAID,SAAS,KAAK,SAAlB,EAA6B;AACzB,UAAIE,KAAK,GAAG,CAAC,eAAD,EAAkB,MAAlB,EAA0B,OAA1B,EAAmC,KAAnC,CAAZ;AACAA,MAAAA,KAAK,GAAGA,KAAK,CAACC,GAAN,CAAUC,CAAC,iBAAI;AAAA,kBAA4CA;AAA5C,SAAc,GAAEC,IAAI,CAACC,MAAL,KAAgB,OAAQ,EAAxC;AAAA;AAAA;AAAA;AAAA,cAAf,CAAR;AACAP,MAAAA,MAAM,CAACQ,IAAP,CAAYL,KAAZ;AACH,KAJD,MAIO;AACHH,MAAAA,MAAM,CAACQ,IAAP,eAAY;AAAA,wBAA6CP,SAA7C;AAAA,SAAc,GAAEK,IAAI,CAACC,MAAL,KAAgB,OAAQ,EAAxC;AAAA;AAAA;AAAA;AAAA,cAAZ;AACH;AACJ;;AAED,QAAME,UAAU,GAAG,MAAM;AACrB,QAAIb,KAAK,CAACc,OAAN,KAAkB,CAAtB,EAAyB;AACrBd,MAAAA,KAAK,CAACe,MAAN,CAAa,CAAb;AACAf,MAAAA,KAAK,CAACgB,UAAN,CAAiB,CAAjB;AACH;;AACD,YAAQf,SAAS,CAACgB,OAAV,CAAkBC,OAAlB,CAA0BjB,SAAS,CAACgB,OAAV,CAAkBC,OAAlB,CAA0BC,aAApD,EAAmEC,KAA3E;AACI,WAAK,IAAL;AACIpB,QAAAA,KAAK,CAACqB,SAAN,CAAgB;AAACC,UAAAA,EAAE,EAAEnB,QAAQ,CAACc,OAAT,CAAiBG;AAAtB,SAAhB;AACA;;AACJ,WAAK,WAAL;AACIpB,QAAAA,KAAK,CAACqB,SAAN,CAAgB;AAACE,UAAAA,SAAS,EAAEpB,QAAQ,CAACc,OAAT,CAAiBG;AAA7B,SAAhB;AACA;;AACJ,WAAK,UAAL;AACIpB,QAAAA,KAAK,CAACqB,SAAN,CAAgB;AAACG,UAAAA,QAAQ,EAAErB,QAAQ,CAACc,OAAT,CAAiBG;AAA5B,SAAhB;AACA;;AACJ,WAAK,OAAL;AACIpB,QAAAA,KAAK,CAACqB,SAAN,CAAgB;AAACI,UAAAA,KAAK,EAAEtB,QAAQ,CAACc,OAAT,CAAiBG;AAAzB,SAAhB;AACA;;AACJ,WAAK,OAAL;AACIpB,QAAAA,KAAK,CAACqB,SAAN,CAAgB;AAACK,UAAAA,KAAK,EAAEvB,QAAQ,CAACc,OAAT,CAAiBG;AAAzB,SAAhB;AACA;;AACJ,WAAK,SAAL;AACIpB,QAAAA,KAAK,CAACqB,SAAN,CAAgB;AAACM,UAAAA,OAAO,EAAExB,QAAQ,CAACc,OAAT,CAAiBG;AAA3B,SAAhB;AACA;;AACJ,WAAK,aAAL;AACIpB,QAAAA,KAAK,CAACqB,SAAN,CAAgB;AAACO,UAAAA,WAAW,EAAEzB,QAAQ,CAACc,OAAT,CAAiBG;AAA/B,SAAhB;AACA;;AACJ,WAAK,eAAL;AACIpB,QAAAA,KAAK,CAACqB,SAAN,CAAgB;AAACQ,UAAAA,aAAa,EAAE1B,QAAQ,CAACc,OAAT,CAAiBG;AAAjC,SAAhB;AACA;;AACJ,WAAK,MAAL;AACIpB,QAAAA,KAAK,CAACqB,SAAN,CAAgB;AAACS,UAAAA,IAAI,EAAE3B,QAAQ,CAACc,OAAT,CAAiBG;AAAxB,SAAhB;AACA;;AACJ,WAAK,OAAL;AACIpB,QAAAA,KAAK,CAACqB,SAAN,CAAgB;AAACd,UAAAA,KAAK,EAAEJ,QAAQ,CAACc,OAAT,CAAiBG;AAAzB,SAAhB;AACA;;AACJ,WAAK,KAAL;AACIpB,QAAAA,KAAK,CAACqB,SAAN,CAAgB;AAACU,UAAAA,GAAG,EAAE5B,QAAQ,CAACc,OAAT,CAAiBG;AAAvB,SAAhB;AACA;;AACJ;AACIpB,QAAAA,KAAK,CAACqB,SAAN,CAAgB;AAACU,UAAAA,GAAG,EAAE5B,QAAQ,CAACc,OAAT,CAAiBG;AAAvB,SAAhB;AAnCR;AAqCH,GA1CD;;AA2CA,sBACI;AAAA,4BACI;AAAQ,MAAA,SAAS,EAAEtB,CAAC,CAACkC,GAArB;AAA0B,MAAA,GAAG,EAAE/B,SAA/B;AAAA,gBACKG;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAO,MAAA,GAAG,EAAED,QAAZ;AAAsB,MAAA,SAAS,EAAEL,CAAC,CAACmC,WAAnC;AAAgD,MAAA,IAAI,EAAE,MAAtD;AAA8D,MAAA,WAAW,EAAE;AAA3E;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAQ,MAAA,OAAO,EAAEpB,UAAjB;AAA6B,MAAA,SAAS,EAAEf,CAAC,CAACoC,UAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAlED;;KAAMnC,U;AAqEN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\r\nimport s from './SearchData.module.css'\r\n\r\nconst SearchData = (props) => {\r\n    let selectRef = React.createRef();\r\n    let inputRef = React.createRef();\r\n    let select = []\r\n    for (const selectKey in props.selectData) {\r\n        if (selectKey === 'address') {\r\n            let state = [\"streetAddress\", \"city\", \"state\", \"zip\"]\r\n            state = state.map(e => <option key={`${Math.random() * 1243567}`}>{e}</option>)\r\n            select.push(state)\r\n        } else {\r\n            select.push(<option key={`${Math.random() * 1243567}`}> {selectKey}</option>)\r\n        }\r\n    }\r\n\r\n    const withFilter = () => {\r\n        if (props.nowPage !== 1) {\r\n            props.setNum(0)\r\n            props.setNowPage(1)\r\n        }\r\n        switch (selectRef.current.options[selectRef.current.options.selectedIndex].value) {\r\n            case \"id\":\r\n                props.setSearch({id: inputRef.current.value})\r\n                break\r\n            case \"firstName\":\r\n                props.setSearch({firstName: inputRef.current.value})\r\n                break\r\n            case \"lastName\":\r\n                props.setSearch({lastName: inputRef.current.value})\r\n                break\r\n            case \"email\":\r\n                props.setSearch({email: inputRef.current.value})\r\n                break\r\n            case \"phone\":\r\n                props.setSearch({phone: inputRef.current.value})\r\n                break\r\n            case \"address\":\r\n                props.setSearch({address: inputRef.current.value})\r\n                break\r\n            case \"description\":\r\n                props.setSearch({description: inputRef.current.value})\r\n                break\r\n            case \"streetAddress\":\r\n                props.setSearch({streetAddress: inputRef.current.value})\r\n                break\r\n            case \"city\":\r\n                props.setSearch({city: inputRef.current.value})\r\n                break\r\n            case \"state\":\r\n                props.setSearch({state: inputRef.current.value})\r\n                break\r\n            case \"zip\":\r\n                props.setSearch({zip: inputRef.current.value})\r\n                break\r\n            default :\r\n                props.setSearch({zip: inputRef.current.value})\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <select className={s.sel} ref={selectRef}>\r\n                {select}\r\n            </select>\r\n            <input ref={inputRef} className={s.searchInput} type={\"text\"} placeholder={\"Pls write something...\"}/>\r\n            <button onClick={withFilter} className={s.findButton}>Find</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default SearchData"]},"metadata":{},"sourceType":"module"}