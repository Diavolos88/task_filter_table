{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\salov\\\\Desktop\\\\project_for_work\\\\src\\\\components\\\\MainData\\\\MainData.jsx\",\n    _s = $RefreshSig$();\n\nimport Reacrt, { useState } from 'react';\nimport NewLineTable from \"../NewLineTable/NewLineTable\";\nimport s from './MainData.module.css';\nimport Filters from \"./Filters/Filters\";\n\nconst MainData = props => {\n  _s();\n\n  let [num, setNum] = useState(0);\n  let [nowPage, setNowPage] = useState(1);\n  const firsLine = {\n    id: \"id\",\n    firstName: \"firstName\",\n    lastName: \"lastName\",\n    email: \"email\",\n    phone: \"phone\",\n    address: \"address\",\n    description: \"description\"\n  };\n\n  const changeState = e => {\n    console.log(e);\n  };\n\n  if (props.data) {\n    if (props.data.data.length <= 50) {\n      let arr = props.data.data.map(tr => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(NewLineTable, {\n          data: tr\n        }, tr.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 54\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 50\n      }, this));\n      return /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(Filters, {\n          data: firsLine\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), arr]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this);\n    } else {\n      let arr = props.data.data.slice(num * 50, (num + 1) * 50).map(tr => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: /*#__PURE__*/_jsxDEV(NewLineTable, {\n          data: tr\n        }, tr.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this));\n      let nums = [];\n      let end = Math.ceil(props.data.data.length / 50);\n\n      for (let i = 1; i < end + 1; i++) {\n        nums.push( /*#__PURE__*/_jsxDEV(\"span\", {\n          onClick: changeState,\n          className: i === nowPage ? s.pagenatorNow : s.pagenator,\n          children: i\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 27\n        }, this));\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(Filters, {\n            data: firsLine\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 25\n          }, this), arr]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: nums\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this);\n    }\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this);\n  }\n};\n\n_s(MainData, \"h8J5q6WCzoY6YbKnkHPyUiJiTUE=\");\n\n_c = MainData;\nexport default MainData;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainData\");","map":{"version":3,"sources":["C:/Users/salov/Desktop/project_for_work/src/components/MainData/MainData.jsx"],"names":["Reacrt","useState","NewLineTable","s","Filters","MainData","props","num","setNum","nowPage","setNowPage","firsLine","id","firstName","lastName","email","phone","address","description","changeState","e","console","log","data","length","arr","map","tr","slice","nums","end","Math","ceil","i","push","pagenatorNow","pagenator"],"mappings":"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","sourcesContent":["import Reacrt, {useState} from 'react'\r\nimport NewLineTable from \"../NewLineTable/NewLineTable\";\r\nimport s from './MainData.module.css'\r\nimport Filters from \"./Filters/Filters\";\r\n\r\n\r\nconst MainData = (props) => {\r\n    let [num, setNum] = useState(0)\r\n    let [nowPage, setNowPage] = useState(1)\r\n    const firsLine = {\r\n        id: \"id\",\r\n        firstName: \"firstName\",\r\n        lastName: \"lastName\",\r\n        email: \"email\",\r\n        phone: \"phone\",\r\n        address: \"address\",\r\n        description: \"description\"\r\n    }\r\n\r\n    const changeState = (e) => {\r\n        console.log(e)\r\n    }\r\n\r\n    if (props.data) {\r\n        if (props.data.data.length <= 50) {\r\n            let arr = props.data.data.map(tr => (<tr><NewLineTable data={tr} key={tr.id}/></tr>))\r\n            return (\r\n                <table>\r\n                    <Filters data={firsLine}/>\r\n                    {arr}\r\n                </table>\r\n            )\r\n        } else {\r\n            let arr = props.data.data.slice(num * 50, (num + 1) * 50).map(tr => (\r\n                <tr><NewLineTable data={tr} key={tr.id}/></tr>))\r\n            let nums = []\r\n            let end = Math.ceil(props.data.data.length / 50)\r\n            for (let i = 1; i < end + 1; i++) {\r\n                nums.push(<span onClick={changeState} className={i === nowPage ? s.pagenatorNow :s.pagenator} >{i}</span>)\r\n            }\r\n            return (\r\n                <div>\r\n                    <table>\r\n                        <Filters data={firsLine}/>\r\n                        {arr}\r\n                    </table>\r\n                    <div>{nums}</div>\r\n                </div>\r\n            )\r\n        }\r\n    } else {\r\n        return <div></div>\r\n    }\r\n}\r\n\r\n\r\nexport default MainData"]},"metadata":{},"sourceType":"module"}